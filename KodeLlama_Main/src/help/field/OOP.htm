<html>
<body>
<table cellpadding="0" cellspacing="0" style="font-size:15px;">
	<tr style="height:19px ">
		<td align="center" style="font-size:22px; color:navy ">
			<b>Object Oriented Programming (OOP)</b>
		</td>
	</tr>
	<tr style="height:19px "><td></td></tr>
    <tr>
		<td>
			Have you wondered why the touching function isn't a llama function?
			Why can't you just use Object0.touching(Object1)? The quick answer:
			no reason at all!<br />
			<br />
			The more complex answer: KodeLlama uses a type of programming called
			"Object Oriented Programming", or OOP for short. OOP means that information
			is grouped up into "objects" objects have functions associated with them
			to access the data and perform other calculations. In KodeLlama, we use
			objects called "llamas" to do things. However, programming wasn't always this
			way. In the beginning, programming was "procedural". This meant that data was
			less organized and functions had to take all the necessary data as "arguments".
			The touching function simulates this type of programming. It doesn't belong to
			any objects, but instead takes the data as "arguments" (The two llamas that you
			put in the parentheses are the arguments). Languages that use procedural
			programming include C, Fortran and Pascal. Lanf=guages that use OOP include Java,
			C++, and Python.
		</td>
	</tr>
</table>
</body>
</html>